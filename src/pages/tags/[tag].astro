---
import BaseLayout from '../../layouts/BaseLayout.astro';

/* 
If you need information to construct the page routes, 
    write it inside getStaticPaths().
To receive information in the HTML template of a page route, 
    write it outside getStaticPaths().
*/

/* getStaticPaths creates page routes dynamically;
   In our case, we create one route for each tag, passing along allPosts as a prop */
export async function getStaticPaths() {
    const allPosts = await Astro.glob('../posts/*.md');
    /*
    return [
        {params: {tag: "astro"}, props: {posts: allPosts}},
        {params: {tag: "successes"}, props: {posts: allPosts}},
        {params: {tag: "community"}, props: {posts: allPosts}},
        {params: {tag: "blogging"}, props: {posts: allPosts}},
        {params: {tag: "setbacks"}, props: {posts: allPosts}},
        {params: {tag: "learning in public"}, props: {posts: allPosts}}
    ];
    */
    
    /*better way: */
    // NOTE: '...' is spread syntax (equivalent to *it from python)
    const uniqueTags = [...new Set(
        allPosts.map((post) => post.frontmatter.tags).flat()
    )];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
        params: { tag },
        props: { posts: filteredPosts },
        };
    });
}

/* this will be used by individual tag pages */
const { tag } = Astro.params;
const { posts } = Astro.props;
// NOTE: we use optional chaining to account for posts without a tag array
// old:    const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}
    <!--
    {filteredPosts.map((post) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}
    -->
</ul>
</BaseLayout>